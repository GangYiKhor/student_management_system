generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model form {
  id                 Int                  @id @default(autoincrement()) @db.SmallInt
  form_name          String               @db.VarChar(100)
  is_active          Boolean              @default(true)
  class_registration class_registration[]
  package_discount   package_discount[]
  student            student[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model receipt {
  id                         Int             @id
  receipt_no                 String
  student_id                 Int
  student_name               String          @db.VarChar(255)
  form_id                    Int
  form_name                  String          @db.VarChar(255)
  date                       DateTime        @default(dbgenerated("CURRENT_DATE")) @db.Date
  payment_year               Int
  jan                        Float           @default(0) @db.Real
  feb                        Float           @default(0) @db.Real
  mar                        Float           @default(0) @db.Real
  apr                        Float           @default(0) @db.Real
  may                        Float           @default(0) @db.Real
  jun                        Float           @default(0) @db.Real
  jul                        Float           @default(0) @db.Real
  aug                        Float           @default(0) @db.Real
  sep                        Float           @default(0) @db.Real
  oct                        Float           @default(0) @db.Real
  nov                        Float           @default(0) @db.Real
  dec                        Float           @default(0) @db.Real
  class_fees_per_month       Float           @default(0) @db.Real
  package_discount_per_month Float           @default(0) @db.Real
  total_class_fees           Float           @default(0) @db.Real
  total_package_discount     Float           @default(0) @db.Real
  reg_fees                   Float           @default(0) @db.Real
  incentive                  Float           @default(0) @db.Real
  voucher_id                 String?         @db.VarChar(255)
  voucher_discount           Float           @default(0) @db.Real
  voucher_desc               String?
  tax_amount                 Float           @default(0) @db.Real
  tax_desc                   String
  subtotal                   Float           @default(0) @db.Real
  total                      Float           @default(0) @db.Real
  remarks                    String?         @db.VarChar(255)
  status                     String?         @db.VarChar(20)
  receipt_class              receipt_class[]
}

model receipt_class {
  receipt_id       Int
  class_id         Int
  sequence         Int
  class_name       String  @db.VarChar(255)
  teacher_id       Int
  teacher_name     String  @db.VarChar(255)
  fees             Float   @db.Real
  package_discount Float   @default(0) @db.Real
  is_package       Boolean
  receipt          receipt @relation(fields: [receipt_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([receipt_id, class_id])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model session {
  id          String   @id @db.VarChar(255)
  username    String   @db.VarChar(255)
  login_time  DateTime @db.Timestamptz(6)
  last_active DateTime @db.Timestamptz(6)
  expired_at  DateTime @db.Timestamptz(6)
  user        user     @relation(fields: [username], references: [username], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model student {
  id                  Int             @id @default(autoincrement())
  student_name        String          @db.VarChar(255)
  form_id             Int             @db.SmallInt
  reg_date            DateTime        @default(dbgenerated("CURRENT_DATE")) @db.Date
  reg_year            Int             @db.SmallInt
  gender              String?         @db.VarChar(20)
  ic                  String?         @db.VarChar(20)
  school              String?         @db.VarChar(100)
  phone_number        String?         @db.VarChar(20)
  parent_phone_number String?         @db.VarChar(20)
  email               String?         @db.VarChar(255)
  address             String?         @db.VarChar(255)
  is_active           Boolean         @default(true)
  form                form            @relation(fields: [form_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  student_class       student_class[]
  voucher             voucher[]
}

model student_class {
  student_id Int
  class_id   Int?
  sequence   Int
  class      class_registration? @relation(fields: [class_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  student    student             @relation(fields: [student_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([student_id, sequence])
}

model teacher {
  id                 Int                  @id @default(autoincrement())
  teacher_name       String               @db.VarChar(255)
  ic                 String?              @db.VarChar(20)
  phone_number       String               @db.VarChar(20)
  email              String?              @db.VarChar(255)
  address            String?              @db.VarChar(255)
  start_date         DateTime             @default(dbgenerated("CURRENT_DATE")) @db.Date
  end_date           DateTime?            @db.Date
  is_active          Boolean              @default(true)
  class_registration class_registration[]
}

model user {
  id          String    @id @db.Uuid
  username    String    @unique @db.VarChar(255)
  password    String    @db.VarChar(255)
  given_name  String    @db.VarChar(255)
  family_name String    @db.VarChar(255)
  session     session[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model class_registration {
  id            Int             @id @default(autoincrement())
  teacher_id    Int
  class_name    String          @db.VarChar(50)
  start_date    DateTime        @default(dbgenerated("CURRENT_DATE")) @db.Date
  end_date      DateTime?       @db.Date
  class_year    Int             @db.SmallInt
  form_id       Int             @db.SmallInt
  day           Int
  start_time    DateTime        @db.Time(6)
  end_time      DateTime        @db.Time(6)
  fees          Float           @db.Real
  is_package    Boolean
  form          form            @relation(fields: [form_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  teacher       teacher         @relation(fields: [teacher_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  student_class student_class[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model package_discount {
  id                   Int       @id @default(autoincrement())
  start_date           DateTime  @default(dbgenerated("CURRENT_DATE")) @db.Date
  end_date             DateTime? @db.Date
  form_id              Int       @db.SmallInt
  subject_count_from   Int       @db.SmallInt
  subject_count_to     Int       @db.SmallInt
  discount_per_subject Float     @db.Real
  form                 form      @relation(fields: [form_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model tax {
  id         Int       @id @default(autoincrement()) @db.SmallInt
  percentage Float     @db.Real
  start_date DateTime  @default(dbgenerated("CURRENT_DATE")) @db.Date
  end_date   DateTime? @db.Date
  inclusive  Boolean
}

model voucher {
  id            String   @id @db.VarChar(255)
  student_id    Int?
  discount      Float    @db.Real
  is_percentage Boolean
  start_date    DateTime @default(dbgenerated("CURRENT_DATE")) @db.Date
  expired_at    DateTime @db.Date
  used          Boolean  @default(false)
  student       student? @relation(fields: [student_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model holiday {
  id          Int      @id @default(autoincrement())
  date        DateTime @db.Date
  description String   @db.VarChar(255)
}
